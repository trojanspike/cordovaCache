!function(a){var b,c,d,e,f,g,h,i,j,k,l;return e={create:!0,exclusive:!1},d="codova_cache",h={set:!1,passTest:!1,_entry:null,password:null,content:{},write:function(a,b){return h._entry.createWriter(function(c){return c.onwriteend=function(){return b()},c.write(a)})},encrypt:function(a){return CryptoJS.AES.encrypt(a,h.password).toString()},decrypt:function(a){return CryptoJS.AES.decrypt(a,h.password).toString(CryptoJS.enc.Utf8)}},l=!1,k=null,i=null,g=null,f={write:function(a,b){return i.createWriter(function(c){return c.position=0,c.onwriteend=function(){return g=a,b(a)},c.write(a)})},read:function(a){return i.file(function(b){var c;return c=new FileReader,c.onloadend=function(b){return a(b)},c.readAsText(b)})}},j=function(b){return a.requestFileSystem(1,0,function(a){return a.root.getDirectory(d,e,function(a){var c;return a.getFile("cacheCrypt.json",e,function(a){return h._entry=a,a.file(function(a){var b;return b=new FileReader,b.onloadend=function(a){return"null"===a.target.result?(h.content={},c()):(h.content=JSON.parse(a.target.result),h.set="undefined"!=typeof h.content[k]?!0:!1,c())},b.readAsText(a)})},function(){throw new Error("#011 : crypt test file error")}),c=function(){return a.getFile(k+".cache",e,function(a){return i=a,null===g?f.read(function(a){return g=a.target.result,l=!0,b()}):void 0},function(){throw new Error("#006 : Directory error")})}},function(){throw new Error("#005 : fileSystem error")})},function(){throw new Error("#004 : Request error")})},b=function(){function a(a,b){var c,d,e;return e=(new Date).getTime(),""===g?(c={},c[a]={content:"",details:{created:e,updated:e,crypt:b}}):c=JSON.parse(g),"undefined"==typeof c[a]&&(c[a]={content:"",details:{created:e,updated:e,crypt:b}}),d={get:function(){return b?h.decrypt(c[a].content):c[a].content},put:function(d){if("string"!=typeof d)throw new TypeError("#101 : user error, put($1) $1 must be a string");return c[a].content=b?h.encrypt(d):d,this},details:function(){return c[a].details},save:function(b){var d;if(d=(new Date).getTime(),"undefined"!=typeof b&&"function"!=typeof b)throw new TypeError("#102 : user error, save($1) $1 must be a function or empty");return c[a].details.updated=d,f.write(JSON.stringify(c),b||function(){return c[a].content})}}}return a}(),c=function(){function b(){if("object"!=typeof a.CryptoJS)throw new Error("#012 : CryptoJS library required")}return b.prototype.init=function(a,b,c){var d;if(this.isset()===!1)throw new Error("Cryption password is not set up yet: use crypt.setPwd()");if("string"!=typeof a||"function"!=typeof b||"function"!=typeof c)throw new Error("crypt.init $1 must be string, $2 must be function, $3 must be function");h.password=a;try{return d=JSON.parse(h.decrypt(h.content[k])),d.test?(h.set=!0,h.passTest=!0,b()):c()}catch(e){return c()}},b.prototype.isset=function(){return h.set},b.prototype.setPwd=function(a,b){if(this.isset()===!0)throw new Error("#015 : Password has already been set, use .init or .chngPwd");if("string"!=typeof a||"function"!=typeof b)throw new Error("crypt.setPwd , $1 must be a string, $2 must be function");return h.set=!0,h.password=a,h.content[k]=h.encrypt(JSON.stringify({test:!0})),h.write(JSON.stringify(h.content),b)},b}(),a.SI=a.SI||{},a.SI.cordovaCache=function(d,e){var f;if("string"!=typeof d||"function"!=typeof e)throw new Error("#001 : codovaCache params Error , $1 = string $2 = function");if(null!==k)throw new Error("#002 : id is already set");if(k=d,"function"!=typeof JSON.parse||"function"!=typeof JSON.stringify)throw new Error("#007 : JSON not available");if(f={list:function(){var a,b,c;if(""===g)return[];c=JSON.parse(g),b=[];for(a in c)b.push(a);return b},container:function(a,c){if(null==c&&(c=!1),"boolean"!=typeof c)throw new Error("#018 , container cryption must be true or false");if(c&&!h.passTest)throw new Error("#023 , You must have a success crypt.init before you can use it.");return new b(a,c)}},"function"!=typeof a.requestFileSystem)throw new Error("ErrorCode #003 : FileSystem not available");return j(function(){return e(f,new c)})}}(window);
//# sourceMappingURL=cordovaCache.min.map